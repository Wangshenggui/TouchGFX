/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <touchgfx/transitions/BlockTransition.hpp>

#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/bootscreen_screen/BootScreenView.hpp>
#include <gui/bootscreen_screen/BootScreenPresenter.hpp>
#include <gui/desktopscreen_screen/DesktopScreenView.hpp>
#include <gui/desktopscreen_screen/DesktopScreenPresenter.hpp>
#include <gui/settingscreen_screen/SettingScreenView.hpp>
#include <gui/settingscreen_screen/SettingScreenPresenter.hpp>
#include <gui/paddysowingscreen_screen/PaddySowingScreenView.hpp>
#include <gui/paddysowingscreen_screen/PaddySowingScreenPresenter.hpp>
#include <gui/filemanagerscreen_screen/FileManagerScreenView.hpp>
#include <gui/filemanagerscreen_screen/FileManagerScreenPresenter.hpp>
#include <gui/usbinterconnectionscreen_screen/USBInterconnectionScreenView.hpp>
#include <gui/usbinterconnectionscreen_screen/USBInterconnectionScreenPresenter.hpp>
#include <gui/slavecontrolscreen_screen/SlaveControlScreenView.hpp>
#include <gui/slavecontrolscreen_screen/SlaveControlScreenPresenter.hpp>
#include <gui/rtkconfigurationscreen_screen/RTKConfigurationScreenView.hpp>
#include <gui/rtkconfigurationscreen_screen/RTKConfigurationScreenPresenter.hpp>
#include <gui/screen_4gmodulesetup_screen/Screen_4GModuleSetupView.hpp>
#include <gui/screen_4gmodulesetup_screen/Screen_4GModuleSetupPresenter.hpp>
#include <gui/radiosscom_screen_screen/RadioSSCOM_ScreenView.hpp>
#include <gui/radiosscom_screen_screen/RadioSSCOM_ScreenPresenter.hpp>
#include <gui/nesscreen_screen/NESScreenView.hpp>
#include <gui/nesscreen_screen/NESScreenPresenter.hpp>
#include <gui/motiontrailscreen_screen/MotionTrailScreenView.hpp>
#include <gui/motiontrailscreen_screen/MotionTrailScreenPresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< BootScreenView,
            touchgfx::meta::TypeList< DesktopScreenView,
            touchgfx::meta::TypeList< SettingScreenView,
            touchgfx::meta::TypeList< PaddySowingScreenView,
            touchgfx::meta::TypeList< FileManagerScreenView,
            touchgfx::meta::TypeList< USBInterconnectionScreenView,
            touchgfx::meta::TypeList< SlaveControlScreenView,
            touchgfx::meta::TypeList< RTKConfigurationScreenView,
            touchgfx::meta::TypeList< Screen_4GModuleSetupView,
            touchgfx::meta::TypeList< RadioSSCOM_ScreenView,
            touchgfx::meta::TypeList< NESScreenView,
            touchgfx::meta::TypeList< MotionTrailScreenView,
            touchgfx::meta::Nil > > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< BootScreenPresenter,
            touchgfx::meta::TypeList< DesktopScreenPresenter,
            touchgfx::meta::TypeList< SettingScreenPresenter,
            touchgfx::meta::TypeList< PaddySowingScreenPresenter,
            touchgfx::meta::TypeList< FileManagerScreenPresenter,
            touchgfx::meta::TypeList< USBInterconnectionScreenPresenter,
            touchgfx::meta::TypeList< SlaveControlScreenPresenter,
            touchgfx::meta::TypeList< RTKConfigurationScreenPresenter,
            touchgfx::meta::TypeList< Screen_4GModuleSetupPresenter,
            touchgfx::meta::TypeList< RadioSSCOM_ScreenPresenter,
            touchgfx::meta::TypeList< NESScreenPresenter,
            touchgfx::meta::TypeList< MotionTrailScreenPresenter,
            touchgfx::meta::Nil > > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::TypeList< BlockTransition,
            touchgfx::meta::Nil >
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoBootScreenScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
