/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DESKTOPSCREENVIEWBASE_HPP
#define DESKTOPSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/desktopscreen_screen/DesktopScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/CacheableContainer.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <gui/containers/NotificationBarContainer.hpp>
#include <gui/containers/StatusBarContainer.hpp>

class DesktopScreenViewBase : public touchgfx::View<DesktopScreenPresenter>
{
public:
    DesktopScreenViewBase();
    virtual ~DesktopScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void Volume_Trigger1Handler(uint8_t value)
    {
        // Override and implement this function in DesktopScreen
    }
    virtual void flexButton10Handler()
    {
        // Override and implement this function in DesktopScreen
    }
    virtual void Fan_TriggerHandler(bool value)
    {
        // Override and implement this function in DesktopScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage tiledImage2;
    touchgfx::SwipeContainer swipeContainer1;
    touchgfx::CacheableContainer swipeContainer1Page1;
    touchgfx::TiledImage tiledImage1;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton1;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton2;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton3;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton4;
    touchgfx::DigitalClock digitalClock1;
    touchgfx::Container swipeContainer1Page2;
    touchgfx::TiledImage tiledImage3;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton5;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton6;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton7;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton8;
    touchgfx::Container swipeContainer1Page3;
    touchgfx::TiledImage tiledImage4;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton9;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton10;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton11;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton12;
    touchgfx::ClickListener< touchgfx::Box > box1;
    NotificationBarContainer notificationBarContainer;
    StatusBarContainer statusBarContainer;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DesktopScreenViewBase, uint8_t> notificationBarContainerVolume_Trigger1Callback;
    touchgfx::Callback<DesktopScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<DesktopScreenViewBase, bool> notificationBarContainerFan_TriggerCallback;

    /*
     * Callback Handler Declarations
     */
    void notificationBarContainerVolume_Trigger1CallbackHandler(uint8_t value);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void notificationBarContainerFan_TriggerCallbackHandler(bool value);

};

#endif // DESKTOPSCREENVIEWBASE_HPP
