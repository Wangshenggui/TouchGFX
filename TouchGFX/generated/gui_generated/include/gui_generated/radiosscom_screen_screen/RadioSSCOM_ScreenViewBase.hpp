/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef RADIOSSCOM_SCREENVIEWBASE_HPP
#define RADIOSSCOM_SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/radiosscom_screen_screen/RadioSSCOM_ScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>

class RadioSSCOM_ScreenViewBase : public touchgfx::View<RadioSSCOM_ScreenPresenter>
{
public:
    RadioSSCOM_ScreenViewBase();
    virtual ~RadioSSCOM_ScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::TiledImage tiledImage1;
    touchgfx::Container container1;
    touchgfx::Box box2;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  BackFlexButton;
    touchgfx::TextArea TitleTextArea;
    touchgfx::Line line2;
    touchgfx::PainterRGB565 line2Painter;
    touchgfx::Box box3;
    touchgfx::Box box3_1;
    touchgfx::Box box3_2;
    touchgfx::Box box3_3;
    touchgfx::Box box3_4;
    touchgfx::TextAreaWithOneWildcard textArea2;
    touchgfx::TextAreaWithOneWildcard textArea3;
    touchgfx::TextAreaWithOneWildcard textArea4;
    touchgfx::TextAreaWithOneWildcard textArea5;
    touchgfx::TextAreaWithOneWildcard textArea6;
    touchgfx::TextAreaWithOneWildcard textArea3_1;
    touchgfx::TextAreaWithOneWildcard textArea4_1;
    touchgfx::TextAreaWithOneWildcard textArea5_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 200;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];
    static const uint16_t TEXTAREA2_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textArea2Buffer[TEXTAREA2_SIZE];
    static const uint16_t TEXTAREA3_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textArea3Buffer[TEXTAREA3_SIZE];
    static const uint16_t TEXTAREA4_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textArea4Buffer[TEXTAREA4_SIZE];
    static const uint16_t TEXTAREA5_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textArea5Buffer[TEXTAREA5_SIZE];
    static const uint16_t TEXTAREA6_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textArea6Buffer[TEXTAREA6_SIZE];
    static const uint16_t TEXTAREA3_1_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textArea3_1Buffer[TEXTAREA3_1_SIZE];
    static const uint16_t TEXTAREA4_1_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textArea4_1Buffer[TEXTAREA4_1_SIZE];
    static const uint16_t TEXTAREA5_1_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textArea5_1Buffer[TEXTAREA5_1_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<RadioSSCOM_ScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // RADIOSSCOM_SCREENVIEWBASE_HPP
