/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef RTKCONFIGURATIONSCREENVIEWBASE_HPP
#define RTKCONFIGURATIONSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/rtkconfigurationscreen_screen/RTKConfigurationScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <gui/containers/KeyBoardContainer.hpp>
#include <touchgfx/mixins/Draggable.hpp>

class RTKConfigurationScreenViewBase : public touchgfx::View<RTKConfigurationScreenPresenter>
{
public:
    RTKConfigurationScreenViewBase();
    virtual ~RTKConfigurationScreenViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void ButtonAction1(uint8_t value)
    {
        // Override and implement this function in Screen1
    }
    

    /*
     * Virtual Action Handlers
     */
    virtual void portflexButtonHandler()
    {
        // Override and implement this function in RTKConfigurationScreen
    }
    virtual void setButton1Handler()
    {
        // Override and implement this function in RTKConfigurationScreen
    }
    virtual void inquireButton1Handler()
    {
        // Override and implement this function in RTKConfigurationScreen
    }
    virtual void setButton2Handler()
    {
        // Override and implement this function in RTKConfigurationScreen
    }
    virtual void inquireButton2Handler()
    {
        // Override and implement this function in RTKConfigurationScreen
    }
    virtual void BackButtonTrigger(bool value)
    {
        // Override and implement this function in RTKConfigurationScreen
    }
    virtual void NtripflexButtonHandler()
    {
        // Override and implement this function in RTKConfigurationScreen
    }
    virtual void NtripflexButtonUserHandler()
    {
        // Override and implement this function in RTKConfigurationScreen
    }
    virtual void NtripflexButtonPasswordHandler()
    {
        // Override and implement this function in RTKConfigurationScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::TiledImage tiledImage1;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  BackFlexButton;
    touchgfx::TextArea TitleTextArea;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::Container container1;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextArea NtriptextArea;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  NtripflexButton;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ToggleButtonTrigger >  >  portflexButton;
    touchgfx::TextArea porttextArea;
    touchgfx::TextArea NtriptextAreaUser;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  NtripflexButtonUser;
    touchgfx::TextArea NtriptextAreaPassword;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  NtripflexButtonPassword;
    touchgfx::TextArea textAreaMountPoint;
    touchgfx::Box box2;
    touchgfx::SwipeContainer swipeContainer1;
    touchgfx::Container swipeContainer1Page1;
    touchgfx::TextAreaWithOneWildcard textAreaMountPoint1;
    touchgfx::Container swipeContainer1Page2;
    touchgfx::TextAreaWithOneWildcard textAreaMountPoint2;
    touchgfx::Container swipeContainer1Page3;
    touchgfx::TextAreaWithOneWildcard textAreaMountPoint3;
    touchgfx::Container swipeContainer1Page4;
    touchgfx::TextAreaWithOneWildcard textAreaMountPoint4;
    touchgfx::Container swipeContainer1Page5;
    touchgfx::TextAreaWithOneWildcard textAreaMountPoint5;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  setButton1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  inquireButton1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  setButton2;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  inquireButton2;
    touchgfx::Container container2;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton2;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton3;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton4;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton5;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton6;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton7;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton8;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton9;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton10;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton11;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton12;
    touchgfx::Container Modalcontainer;
    touchgfx::ClickListener< touchgfx::Box > box3;
    touchgfx::Box box4;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::ImageButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  ErrorButton;
    touchgfx::Box box7;
    touchgfx::ScrollableContainer scrollableContainer1;
    touchgfx::TextAreaWithOneWildcard textArea5;
    touchgfx::Draggable< KeyBoardContainer > keyBoardContainer1;
    touchgfx::ClickListener< touchgfx::Container > container3;
    touchgfx::Box box6;
    touchgfx::Box box5;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea3;
    touchgfx::TextArea textArea4;

    /*
     * Wildcard Buffers
     */
    static const uint16_t NTRIPFLEXBUTTON_SIZE = 50;
    touchgfx::Unicode::UnicodeChar NtripflexButtonBuffer[NTRIPFLEXBUTTON_SIZE];
    static const uint16_t PORTFLEXBUTTON_SIZE = 10;
    touchgfx::Unicode::UnicodeChar portflexButtonBuffer[PORTFLEXBUTTON_SIZE];
    static const uint16_t NTRIPFLEXBUTTONUSER_SIZE = 50;
    touchgfx::Unicode::UnicodeChar NtripflexButtonUserBuffer[NTRIPFLEXBUTTONUSER_SIZE];
    static const uint16_t NTRIPFLEXBUTTONPASSWORD_SIZE = 50;
    touchgfx::Unicode::UnicodeChar NtripflexButtonPasswordBuffer[NTRIPFLEXBUTTONPASSWORD_SIZE];
    static const uint16_t TEXTAREAMOUNTPOINT1_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textAreaMountPoint1Buffer[TEXTAREAMOUNTPOINT1_SIZE];
    static const uint16_t TEXTAREAMOUNTPOINT2_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textAreaMountPoint2Buffer[TEXTAREAMOUNTPOINT2_SIZE];
    static const uint16_t TEXTAREAMOUNTPOINT3_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textAreaMountPoint3Buffer[TEXTAREAMOUNTPOINT3_SIZE];
    static const uint16_t TEXTAREAMOUNTPOINT4_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textAreaMountPoint4Buffer[TEXTAREAMOUNTPOINT4_SIZE];
    static const uint16_t TEXTAREAMOUNTPOINT5_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textAreaMountPoint5Buffer[TEXTAREAMOUNTPOINT5_SIZE];
    static const uint16_t TEXTAREA1_SIZE = 50;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];
    static const uint16_t TEXTAREA5_SIZE = 500;
    touchgfx::Unicode::UnicodeChar textArea5Buffer[TEXTAREA5_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<RTKConfigurationScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<RTKConfigurationScreenViewBase, bool> keyBoardContainer1OKButtonTriggersCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void keyBoardContainer1OKButtonTriggersCallbackHandler(bool value);

};

#endif // RTKCONFIGURATIONSCREENVIEWBASE_HPP
