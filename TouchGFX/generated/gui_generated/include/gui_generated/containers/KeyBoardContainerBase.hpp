/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef KEYBOARDCONTAINERBASE_HPP
#define KEYBOARDCONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/widgets/RepeatButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>

class KeyBoardContainerBase : public touchgfx::Container
{
public:
    KeyBoardContainerBase();
    virtual ~KeyBoardContainerBase();
    virtual void initialize();

    /*
     * Custom Actions
     */
    virtual void ButtonAction1(uint8_t value)
    {
        // Override and implement this function in Screen1
    }
    

    /*
     * Custom Trigger Callback Setters
     */
    void setOKButtonTriggersCallback(touchgfx::GenericCallback<bool>& callback)
    {
        this->OKButtonTriggersCallback = &callback;
    }
    void setTouchTriggerCallback(touchgfx::GenericCallback<uint8_t>& callback)
    {
        this->TouchTriggerCallback = &callback;
    }

    /*
     * Virtual Action Handlers
     */
    virtual void buttonShiftHandler()
    {
        // Override and implement this function in KeyBoardContainer
    }
    virtual void buttonBackspaceHandler()
    {
        // Override and implement this function in KeyBoardContainer
    }
    virtual void buttonNumberHandler()
    {
        // Override and implement this function in KeyBoardContainer
    }
    virtual void flexButtonChinaHandler()
    {
        // Override and implement this function in KeyBoardContainer
    }
    virtual void flexButtonRightHandler()
    {
        // Override and implement this function in KeyBoardContainer
    }
    virtual void flexButtonLeftHandler()
    {
        // Override and implement this function in KeyBoardContainer
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitOKButtonTriggersCallback(bool value)
    {
        if (OKButtonTriggersCallback && OKButtonTriggersCallback->isValid())
        {
            this->OKButtonTriggersCallback->execute( value);
        }
    }
    virtual void emitTouchTriggerCallback(uint8_t value)
    {
        if (TouchTriggerCallback && TouchTriggerCallback->isValid())
        {
            this->TouchTriggerCallback->execute( value);
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box6;
    touchgfx::ClickListener< touchgfx::Container > container1;
    touchgfx::Box box2;
    touchgfx::Box box3;
    touchgfx::Circle circle1;
    touchgfx::PainterRGB565 circle1Painter;
    touchgfx::Circle circle2;
    touchgfx::PainterRGB565 circle2Painter;
    touchgfx::Circle circle3;
    touchgfx::PainterRGB565 circle3Painter;
    touchgfx::Circle circle4;
    touchgfx::PainterRGB565 circle4Painter;
    touchgfx::ToggleButton buttonShift;
    touchgfx::Button buttonSpace;
    touchgfx::Container containerQ_P;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonQ;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonW;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonE;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonR;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonT;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonY;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonU;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonI;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonO;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonP;
    touchgfx::Container containerA_L;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonA;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonS;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonD;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonF;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonG;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonH;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonJ;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonK;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonL;
    touchgfx::Container containerZ_M;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonZ;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonX;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonC;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonV;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonB;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonN;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonM;
    touchgfx::Container containerNumber;
    touchgfx::ClickListener< touchgfx::Container > containerNumBack;
    touchgfx::Box box2_1;
    touchgfx::Box box3_1;
    touchgfx::Circle circle1_1;
    touchgfx::PainterRGB565 circle1_1Painter;
    touchgfx::Circle circle2_1;
    touchgfx::PainterRGB565 circle2_1Painter;
    touchgfx::Circle circle3_1;
    touchgfx::PainterRGB565 circle3_1Painter;
    touchgfx::Circle circle4_1;
    touchgfx::PainterRGB565 circle4_1Painter;
    touchgfx::Container containerNum1_3;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonNum3;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonNum2;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonNum1;
    touchgfx::Container containerNum4_6;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonNum6;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonNum5;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonNum4;
    touchgfx::Container containerNum7_9;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonNum9;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonNum8;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonNum7;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonNum0;
    touchgfx::Box box4;
    touchgfx::ScrollableContainer scrollableContainer1;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  flexButtonAdd;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  flexButtonSub;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  flexButtonMul;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  flexButtonDiv;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  flexButtonColon;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonAT;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonDot;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ToggleButtonTrigger >  >  flexButtonChina;
    touchgfx::RepeatButton buttonBackspace;
    touchgfx::Button buttonConfirm;
    touchgfx::TextArea textArea_OK;
    touchgfx::Button buttonNumber;
    touchgfx::TextAreaWithOneWildcard textArea_123;
    touchgfx::TextAreaWithOneWildcard OutEnglishTextArea;
    touchgfx::Container container2;
    touchgfx::Box box5;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  flexButtonLeft;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  flexButtonRight;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  OutChinaButton1;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  OutChinaButton2;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  OutChinaButton3;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  OutChinaButton4;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  OutChinaButton5;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  OutChinaButton6;
    touchgfx::ScalableImage scalableImage1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t BUTTONQ_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonQBuffer[BUTTONQ_SIZE];
    static const uint16_t BUTTONW_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonWBuffer[BUTTONW_SIZE];
    static const uint16_t BUTTONE_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonEBuffer[BUTTONE_SIZE];
    static const uint16_t BUTTONR_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonRBuffer[BUTTONR_SIZE];
    static const uint16_t BUTTONT_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonTBuffer[BUTTONT_SIZE];
    static const uint16_t BUTTONY_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonYBuffer[BUTTONY_SIZE];
    static const uint16_t BUTTONU_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonUBuffer[BUTTONU_SIZE];
    static const uint16_t BUTTONI_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonIBuffer[BUTTONI_SIZE];
    static const uint16_t BUTTONO_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonOBuffer[BUTTONO_SIZE];
    static const uint16_t BUTTONP_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonPBuffer[BUTTONP_SIZE];
    static const uint16_t BUTTONA_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonABuffer[BUTTONA_SIZE];
    static const uint16_t BUTTONS_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonSBuffer[BUTTONS_SIZE];
    static const uint16_t BUTTOND_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonDBuffer[BUTTOND_SIZE];
    static const uint16_t BUTTONF_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonFBuffer[BUTTONF_SIZE];
    static const uint16_t BUTTONG_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonGBuffer[BUTTONG_SIZE];
    static const uint16_t BUTTONH_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonHBuffer[BUTTONH_SIZE];
    static const uint16_t BUTTONJ_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonJBuffer[BUTTONJ_SIZE];
    static const uint16_t BUTTONK_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonKBuffer[BUTTONK_SIZE];
    static const uint16_t BUTTONL_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonLBuffer[BUTTONL_SIZE];
    static const uint16_t BUTTONZ_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonZBuffer[BUTTONZ_SIZE];
    static const uint16_t BUTTONX_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonXBuffer[BUTTONX_SIZE];
    static const uint16_t BUTTONC_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonCBuffer[BUTTONC_SIZE];
    static const uint16_t BUTTONV_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonVBuffer[BUTTONV_SIZE];
    static const uint16_t BUTTONB_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonBBuffer[BUTTONB_SIZE];
    static const uint16_t BUTTONN_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonNBuffer[BUTTONN_SIZE];
    static const uint16_t BUTTONM_SIZE = 2;
    touchgfx::Unicode::UnicodeChar ButtonMBuffer[BUTTONM_SIZE];
    static const uint16_t FLEXBUTTONNUM3_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonNum3Buffer[FLEXBUTTONNUM3_SIZE];
    static const uint16_t FLEXBUTTONNUM2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonNum2Buffer[FLEXBUTTONNUM2_SIZE];
    static const uint16_t FLEXBUTTONNUM1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonNum1Buffer[FLEXBUTTONNUM1_SIZE];
    static const uint16_t FLEXBUTTONNUM6_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonNum6Buffer[FLEXBUTTONNUM6_SIZE];
    static const uint16_t FLEXBUTTONNUM5_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonNum5Buffer[FLEXBUTTONNUM5_SIZE];
    static const uint16_t FLEXBUTTONNUM4_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonNum4Buffer[FLEXBUTTONNUM4_SIZE];
    static const uint16_t FLEXBUTTONNUM9_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonNum9Buffer[FLEXBUTTONNUM9_SIZE];
    static const uint16_t FLEXBUTTONNUM8_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonNum8Buffer[FLEXBUTTONNUM8_SIZE];
    static const uint16_t FLEXBUTTONNUM7_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonNum7Buffer[FLEXBUTTONNUM7_SIZE];
    static const uint16_t FLEXBUTTONNUM0_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonNum0Buffer[FLEXBUTTONNUM0_SIZE];
    static const uint16_t FLEXBUTTONADD_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonAddBuffer[FLEXBUTTONADD_SIZE];
    static const uint16_t FLEXBUTTONSUB_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonSubBuffer[FLEXBUTTONSUB_SIZE];
    static const uint16_t FLEXBUTTONMUL_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonMulBuffer[FLEXBUTTONMUL_SIZE];
    static const uint16_t FLEXBUTTONDIV_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonDivBuffer[FLEXBUTTONDIV_SIZE];
    static const uint16_t FLEXBUTTONCOLON_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonColonBuffer[FLEXBUTTONCOLON_SIZE];
    static const uint16_t FLEXBUTTONDOT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButtonDotBuffer[FLEXBUTTONDOT_SIZE];
    static const uint16_t TEXTAREA_123_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_123Buffer[TEXTAREA_123_SIZE];
    static const uint16_t OUTENGLISHTEXTAREA_SIZE = 100;
    touchgfx::Unicode::UnicodeChar OutEnglishTextAreaBuffer[OUTENGLISHTEXTAREA_SIZE];
    static const uint16_t OUTCHINABUTTON1_SIZE = 1000;
    touchgfx::Unicode::UnicodeChar OutChinaButton1Buffer[OUTCHINABUTTON1_SIZE];
    static const uint16_t OUTCHINABUTTON2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar OutChinaButton2Buffer[OUTCHINABUTTON2_SIZE];
    static const uint16_t OUTCHINABUTTON3_SIZE = 10;
    touchgfx::Unicode::UnicodeChar OutChinaButton3Buffer[OUTCHINABUTTON3_SIZE];
    static const uint16_t OUTCHINABUTTON4_SIZE = 10;
    touchgfx::Unicode::UnicodeChar OutChinaButton4Buffer[OUTCHINABUTTON4_SIZE];
    static const uint16_t OUTCHINABUTTON5_SIZE = 10;
    touchgfx::Unicode::UnicodeChar OutChinaButton5Buffer[OUTCHINABUTTON5_SIZE];
    static const uint16_t OUTCHINABUTTON6_SIZE = 10;
    touchgfx::Unicode::UnicodeChar OutChinaButton6Buffer[OUTCHINABUTTON6_SIZE];

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<bool>* OKButtonTriggersCallback;
    touchgfx::GenericCallback<uint8_t>* TouchTriggerCallback;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<KeyBoardContainerBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<KeyBoardContainerBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // KEYBOARDCONTAINERBASE_HPP
