/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef COORDINATEDOTCONTAINERBASE_HPP
#define COORDINATEDOTCONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class CoordinateDotContainerBase : public touchgfx::Container
{
public:
    CoordinateDotContainerBase();
    virtual ~CoordinateDotContainerBase();
    virtual void initialize();
    virtual void handleTickEvent();

    /*
     * Virtual Action Handlers
     */
    virtual void RecordButtonHandler()
    {
        // Override and implement this function in CoordinateDotContainer
    }
    virtual void TriggerTickEvent()
    {
        // Override and implement this function in CoordinateDotContainer
    }
    virtual void flexButton1Handler()
    {
        // Override and implement this function in CoordinateDotContainer
    }
    virtual void flexButton2Handler()
    {
        // Override and implement this function in CoordinateDotContainer
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::TiledImage tiledImage1;
    touchgfx::Box box2;
    touchgfx::Box box3;
    touchgfx::Box box4;
    touchgfx::TextAreaWithOneWildcard LonTextArea;
    touchgfx::TextAreaWithOneWildcard LatTextArea;
    touchgfx::TextAreaWithOneWildcard ModeTextArea;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  RecordButton;
    touchgfx::TextAreaWithOneWildcard LonTextArea_1;
    touchgfx::TextAreaWithOneWildcard LatTextArea_1;
    touchgfx::ImageButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  coorDotConBackButton;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton2;
    touchgfx::TextAreaWithOneWildcard LatTextArea_1_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LONTEXTAREA_SIZE = 20;
    touchgfx::Unicode::UnicodeChar LonTextAreaBuffer[LONTEXTAREA_SIZE];
    static const uint16_t LATTEXTAREA_SIZE = 20;
    touchgfx::Unicode::UnicodeChar LatTextAreaBuffer[LATTEXTAREA_SIZE];
    static const uint16_t MODETEXTAREA_SIZE = 20;
    touchgfx::Unicode::UnicodeChar ModeTextAreaBuffer[MODETEXTAREA_SIZE];
    static const uint16_t LONTEXTAREA_1_SIZE = 20;
    touchgfx::Unicode::UnicodeChar LonTextArea_1Buffer[LONTEXTAREA_1_SIZE];
    static const uint16_t LATTEXTAREA_1_SIZE = 20;
    touchgfx::Unicode::UnicodeChar LatTextArea_1Buffer[LATTEXTAREA_1_SIZE];
    static const uint16_t LATTEXTAREA_1_1_SIZE = 20;
    touchgfx::Unicode::UnicodeChar LatTextArea_1_1Buffer[LATTEXTAREA_1_1_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CoordinateDotContainerBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // COORDINATEDOTCONTAINERBASE_HPP
