/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MOTIONTRAILSCREENVIEWBASE_HPP
#define MOTIONTRAILSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/motiontrailscreen_screen/MotionTrailScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <gui/containers/NavigationBarContainer.hpp>
#include <gui/containers/CoordinateDotContainer.hpp>
#include <gui/containers/NotificationBarContainer.hpp>
#include <gui/containers/StatusBarContainer.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class MotionTrailScreenViewBase : public touchgfx::View<MotionTrailScreenPresenter>
{
public:
    MotionTrailScreenViewBase();
    virtual ~MotionTrailScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void LoadMapButtonHandler()
    {
        // Override and implement this function in MotionTrailScreen
    }
    virtual void ZoomInButtonHandler()
    {
        // Override and implement this function in MotionTrailScreen
    }
    virtual void ZoomOutButtonHandler()
    {
        // Override and implement this function in MotionTrailScreen
    }
    virtual void flexButton5Handler()
    {
        // Override and implement this function in MotionTrailScreen
    }
    virtual void CoordinateDotButtonHandler()
    {
        // Override and implement this function in MotionTrailScreen
    }
    virtual void coorDotConBackButtonHandler()
    {
        // Override and implement this function in MotionTrailScreen
    }
    virtual void function1()
    {
        // Override and implement this function in MotionTrailScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  LoadMapButton;
    touchgfx::Box box2;
    touchgfx::ScalableImage ScalableMapImage;
    touchgfx::ImageButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::RepeatButtonTrigger >  >  ZoomOutButton;
    touchgfx::ImageButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::RepeatButtonTrigger >  >  ZoomInButton;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton5;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton6;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  CoordinateDotButton;
    NavigationBarContainer navigationBarContainer;
    CoordinateDotContainer coordinateDotContainer;
    touchgfx::ImageButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  coorDotConBackButton;
    NotificationBarContainer notificationBarContainer;
    StatusBarContainer statusBarContainer;
    touchgfx::TextAreaWithTwoWildcards CoorTextArea;

    /*
     * Wildcard Buffers
     */
    static const uint16_t COORTEXTAREABUFFER1_SIZE = 20;
    touchgfx::Unicode::UnicodeChar CoorTextAreaBuffer1[COORTEXTAREABUFFER1_SIZE];
    static const uint16_t COORTEXTAREABUFFER2_SIZE = 20;
    touchgfx::Unicode::UnicodeChar CoorTextAreaBuffer2[COORTEXTAREABUFFER2_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MotionTrailScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // MOTIONTRAILSCREENVIEWBASE_HPP
