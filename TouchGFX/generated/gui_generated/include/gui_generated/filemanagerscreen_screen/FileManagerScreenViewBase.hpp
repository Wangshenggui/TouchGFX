/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FILEMANAGERSCREENVIEWBASE_HPP
#define FILEMANAGERSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/filemanagerscreen_screen/FileManagerScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/containers/ListLayout.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <gui/containers/NavigationBarContainer.hpp>
#include <touchgfx/containers/Container.hpp>
#include <gui/containers/BookStarContainer.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <gui/containers/KeyBoardContainer.hpp>

class FileManagerScreenViewBase : public touchgfx::View<FileManagerScreenPresenter>
{
public:
    FileManagerScreenViewBase();
    virtual ~FileManagerScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void BackMenuHandler(uint8_t value)
    {
        // Override and implement this function in FileManagerScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScrollableContainer scrollableContainer1;
    touchgfx::ListLayout listLayout1;
    touchgfx::TextArea textArea1;
    touchgfx::TextAreaWithOneWildcard textArea2;
    NavigationBarContainer navigationBarContainer;
    touchgfx::Container container1;
    BookStarContainer bookStarContainer;
    touchgfx::Button button1;
    KeyBoardContainer keyBoardContainer1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA2_SIZE = 100;
    touchgfx::Unicode::UnicodeChar textArea2Buffer[TEXTAREA2_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<FileManagerScreenViewBase, uint8_t> navigationBarContainerBackMenuTriggerCallback;
    touchgfx::Callback<FileManagerScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void navigationBarContainerBackMenuTriggerCallbackHandler(uint8_t value);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // FILEMANAGERSCREENVIEWBASE_HPP
