/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef USBINTERCONNECTIONSCREENVIEWBASE_HPP
#define USBINTERCONNECTIONSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/usbinterconnectionscreen_screen/USBInterconnectionScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <gui/containers/NavigationBarContainer.hpp>
#include <gui/containers/StatusBarContainer.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class USBInterconnectionScreenViewBase : public touchgfx::View<USBInterconnectionScreenPresenter>
{
public:
    USBInterconnectionScreenViewBase();
    virtual ~USBInterconnectionScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void flexButton1Handler()
    {
        // Override and implement this function in USBInterconnectionScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    NavigationBarContainer navigationBarContainer;
    StatusBarContainer statusBarContainer;
    touchgfx::Container container1;
    touchgfx::Image image1;
    touchgfx::TextArea textArea1;
    touchgfx::TextAreaWithOneWildcard textArea2;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA2_SIZE = 30;
    touchgfx::Unicode::UnicodeChar textArea2Buffer[TEXTAREA2_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<USBInterconnectionScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // USBINTERCONNECTIONSCREENVIEWBASE_HPP
