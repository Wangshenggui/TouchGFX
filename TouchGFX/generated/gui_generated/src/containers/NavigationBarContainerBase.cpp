/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/NavigationBarContainerBase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

NavigationBarContainerBase::NavigationBarContainerBase() :
    BackMenuTriggerCallback(0),
    flexButtonCallback(this, &NavigationBarContainerBase::flexButtonCallbackHandler)
{
    setWidth(50);
    setHeight(480);
    flexButton1.setWildcardText(TypedText(T___SINGLEUSE_7BEH));
    Unicode::snprintf(flexButton1Buffer, FLEXBUTTON1_SIZE, "%s", TypedText(T___SINGLEUSE_OIXB).getText());
    flexButton1.setWildcardTextBuffer(flexButton1Buffer);
    flexButton1.setWildcardTextPosition(0, 35, 50, 120);
    flexButton1.setWildcardTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(0, 180, 50, 120);
    add(flexButton1);

    flexButton2.setWildcardText(TypedText(T___SINGLEUSE_1GK8));
    Unicode::snprintf(flexButton2Buffer, FLEXBUTTON2_SIZE, "%s", TypedText(T___SINGLEUSE_88NJ).getText());
    flexButton2.setWildcardTextBuffer(flexButton2Buffer);
    flexButton2.setWildcardTextPosition(0, 35, 50, 120);
    flexButton2.setWildcardTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButton2.setAction(flexButtonCallback);
    flexButton2.setPosition(0, 60, 50, 120);
    add(flexButton2);

    flexButton3.setWildcardText(TypedText(T___SINGLEUSE_JLZ0));
    Unicode::snprintf(flexButton3Buffer, FLEXBUTTON3_SIZE, "%s", TypedText(T___SINGLEUSE_ICVP).getText());
    flexButton3.setWildcardTextBuffer(flexButton3Buffer);
    flexButton3.setWildcardTextPosition(0, 35, 50, 120);
    flexButton3.setWildcardTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButton3.setAction(flexButtonCallback);
    flexButton3.setPosition(0, 300, 50, 120);
    add(flexButton3);
}

NavigationBarContainerBase::~NavigationBarContainerBase()
{

}

void NavigationBarContainerBase::initialize()
{

}

void NavigationBarContainerBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked change screen to DesktopScreen
        //Go to DesktopScreen with no screen transition
        application().gotoDesktopScreenScreenNoTransition();
    }
    if (&src == &flexButton2)
    {
        //Interaction2
        //When flexButton2 clicked emit BackMenuTrigger callback
        //Emit callback
        emitBackMenuTriggerCallback(1);
    }
    if (&src == &flexButton3)
    {
        //Interaction3
        //When flexButton3 clicked emit BackMenuTrigger callback
        //Emit callback
        emitBackMenuTriggerCallback(2);
    }
}
