/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/NESContainerBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

NESContainerBase::NESContainerBase() :
    flexButtonCallback(this, &NESContainerBase::flexButtonCallbackHandler)
{
    setWidth(320);
    setHeight(480);
    flexButton1.setBoxWithBorderPosition(0, 0, 319, 480);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(0, 0, 319, 480);
    add(flexButton1);

    box1.setPosition(0, 0, 320, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(18, 199, 114));
    add(box1);

    box2.setPosition(0, 0, 319, 480);
    box2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box2);

    image2.setXY(170, 350);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_A_ID));
    add(image2);

    image3.setXY(46, 350);
    image3.setBitmap(touchgfx::Bitmap(BITMAP_B_ID));
    add(image3);

    image4.setXY(80, 222);
    image4.setBitmap(touchgfx::Bitmap(BITMAP_SELECT_ID));
    add(image4);

    image5.setXY(197, 222);
    image5.setBitmap(touchgfx::Bitmap(BITMAP_START_ID));
    add(image5);

    container1.setPosition(55, 10, 200, 200);
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_FANGXIANG_ID));
    scalableImage1.setPosition(0, 0, 200, 200);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::BILINEAR_INTERPOLATION);
    container1.add(scalableImage1);

    add(container1);

    box3.setPosition(55, 10, 67, 67);
    box3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box3.setVisible(false);
    add(box3);

    box4.setPosition(122, 10, 67, 67);
    box4.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box4.setVisible(false);
    add(box4);

    box5.setPosition(189, 10, 67, 67);
    box5.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box5.setVisible(false);
    add(box5);

    box6.setPosition(55, 77, 67, 67);
    box6.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box6.setVisible(false);
    add(box6);

    box7.setPosition(55, 143, 67, 67);
    box7.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box7.setVisible(false);
    add(box7);

    box8.setPosition(189, 77, 67, 67);
    box8.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box8.setVisible(false);
    add(box8);

    box9.setPosition(189, 143, 67, 67);
    box9.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box9.setVisible(false);
    add(box9);

    box10.setPosition(122, 143, 67, 67);
    box10.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box10.setVisible(false);
    add(box10);
}

NESContainerBase::~NESContainerBase()
{

}

void NESContainerBase::initialize()
{

}

void NESContainerBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked change screen to DesktopScreen
        //Go to DesktopScreen with no screen transition
        application().gotoDesktopScreenScreenNoTransition();
    }
}
